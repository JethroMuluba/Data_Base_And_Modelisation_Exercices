// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}


//Creat Models
model Machine {
    id Int @id @default(autoincrement())
    tag String 
    model String @unique
    fabricant String @unique

    apprenants Apprenant[]
    supervisions Supervision[]
}

model Supervision {
    id Int @id @default(autoincrement())
    idMachine Int
    machine  Machine @relation(fields: [idMachine], references: [id])

    idCoach Int
    coach Coach @relation(fields: [idCoach], references: [id])
}

model Coach {
    id Int @id  @default(autoincrement())
    matricule Int @unique
    prenom  String
    nom     String
    postnom String
    data_de_naissance  DateTime
    addresse String
    email   String @unique
    telephone  Int @unique
    disponibilite String
    statut String

    supervisions Supervision[]

    idCohorte Int
    cohorte Cohorte @relation(fields: [idCohorte], references: [id])
}

model Apprenant {
    id Int @id  @default(autoincrement())
    matricule Int @unique
    prenom  String
    nom     String
    postnom String
    data_de_naissance  DateTime
    addresse String
    email   String @unique
    telephone  Int @unique

    idCohorte Int
    cohorte Cohorte @relation(fields: [idCohorte], references: [id])

    idMachine Int
    machine  Machine @relation(fields: [idMachine], references: [id])
}

model Cohorte {
    id Int @id @default(autoincrement())
    code Int @unique
    description String

    apprenants Apprenant[]
    coachs Coach[]
    
    idSession Int
    session Session @relation(fields: [idSession], references: [id])
}

model Session {
    id Int @id @default(autoincrement())
    annee DateTime 
    type String
    ville String @unique

    cohortes Cohorte[]
}
